<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ 기본 설정(필수 설정) ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ -->
	<!-- 모든 서블릿과 필터들에게 공유되는 최상위 전역(Global) 설정 -->
	<!--
		1. root-context.xml 위치.
		   1) 작명 contextConfigLocation 강제 (예약어)
		   2) 절대경로 강제: context 이후부터의 절대경로로 작성 강제
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!--
		2. 전역파일 설정(root-context.xml)을 서블릿 설정(servlet-context.xml)에서
		   쓸 수 있게끔 퍼주는 리스너 설정
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 앱으로의 모든 요청을 처리해주는 최상위 서블릿 설정 -->
	<!--
		DispatcherServlet 클래스의 appServlet이라는 이름(예약어)의 최상위 서블릿이
		스프링에 내장시키는 최상위 클래스이다. (그냥 DispatcherServlet이라고 부름)
		1. spring 내부에 반드시 appServlet이라는 폴더가 존재해야 된다.
		2. DispatcherServlet은 스프링 관련 의존성 중 spring-webmvc 이 의존성이다.
		3. 서블릿이 등록되면 동시에 서블릿 설정파일인 servlet-context.xml도 같이 등록됨.
		4. 추가적으로 load-on-startup을 설정하면 실행 우선순위를 지정할 수 있음 (기본은 1순위)
		5. url-pattern을 /로 설정해서, 설정을 제외한 나머지 모든 파일을 처리하도록 지정한다.
	-->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ 필터 설정 ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ -->
	<!--
		한글/유니코드 변환 필터: 스프링에서 제공하는 기본 필터를 사용해서
		encodingFilter라는 이름의 필터를 만들어 줬음
		부가 설정 옵션은 아래와 같다.
		1) encoding = UTF-8: 인코딩 방식을 UTF-8로 설정 
		2) forceEncoding = true: 요청 뿐만 아니라 응답까지도 강제로 UTF-8 처리하도록 설정
	-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<!-- 필터 맵핑. 필터마다 특정 경로나 특정 파일만 적용하도록 맵핑할 수 있다. -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ 프록시 설정 ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ -->
	<!-- 
		Spring proxy filter 등록
		= root-context.xml에 등록한 필터의 bean을 이곳에 필터로 등록
		= filter-name은 등록된 spring bean의 id를 작성해야 한다.
		= Filter class는 지정된 클래스를 등록해야 한다(DelegatingFilterProxy)
		
		<filter>
			<filter-name>springFilter</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>springFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
	 -->

</web-app>
