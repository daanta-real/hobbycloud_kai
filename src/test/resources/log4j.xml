<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ Appenders
		내가 준비하고 싶은 각 로거들을 여기서 설정해 둔다.
		Appenders 공통 설정에 PatternLayout - ConversionPattern(출력 형식 설정) 이 있다.
		사용법은 아래와 같다.
			-%숫자p: 메세지 우선순위 이름 출력 변수. 숫자는 양수=우측정렬 / 음수=좌측정렬
			-%c: 카테고리 즉 로깅이 실행된 대상루트 출력
			   %c → 전체 경로 출력
			   %c{숫자} → 특정 숫자의 계층까지만 출력 (%c{3}: 3계층까지 즉 com.my.hobbycloud 까지만)
			-%m: 내가 입력한 로깅 메세지
			-%n: 개행
			-%d: 시간 출력 포맷. %d{형식} 이렇게 하면 임의 형태로 포맷 출력 가능. (SimpleDateFormat과 사용법 동일)
	-->
	
	<!--
		1. [Console Appender] 콘솔 로깅
		   실행 콘솔에 로그메세지를 출력해주는 것이다.
		   1) target: System.out으로 지정함으로써 콘솔에 출력시킨다.
		   2) layout: 출력 형식을 지정한다. 위의 ConversionPattern을 사용.
	-->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %m - %c (%d{yyyy-MM-dd HH:mm:ss})%n" />
		</layout>
	</appender>
	
	<!--
		2. [File Appender] 파일 로깅
		   로그 내용을 파일로 동시 저장할 수 있다.
		   만약 로깅파일 생성 시 폴더가 존재하지 않는다면 Log4j가 알아서 생성해 준다.
		   1) file: 출력 대상 파일
		      출력할 파일명을 경로 포함해서 설정.
		      이때, 경로는 상대경로로도 절대경로로도 지정 가능.
		      상대경로 예: <param name="file" value="log/out.log" />
		      절대경로 예: <param name="file" value="D:/out.log" />
		   2) append: 이어쓰기 여부
		      기존에 파일이 존재할 경우 이어쓰기할지 덮어쓰기할지 설정할 수 있다.
		      이어쓰기: <param name="append" value="true" />
		      덮어쓰기: <param name="append" value="false" />
		   3) layout: 출력 형식을 지정한다. 위의 ConversionPattern을 사용.
	-->
	<appender name="file" class="org.apache.log4j.FileAppender">
		<param name="file" value="log/out.log" />
		<param name="append" value="true" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %m - %c (%d{yyyy-MM-dd HH:mm:ss})%n" />
		</layout>
	</appender>
	
	<!--
		3. [Daily Rolling File Appender] 날짜 별 파일 로깅 
		   "Daily" Appender를 설정하면 일 단위로 파일 로그를 동시 저장할 수도 있다.
		   1) file: 출력 대상 파일.     상동
		   2) append: 이어쓰기 여부.    상동
		   3) layout: 출력 형식을 지정. 상동
		   4) DatePattern: 파일 "이름"의 규격. 이것도 SimpleDatePattern 포맷 쓰면 됨.
	-->
	<appender name="daily" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" value="log/daily"></param>
		<param name="append" value="true"></param>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %m - %c (%d{yyyy-MM-dd HH:mm:ss})%n" />
		</layout>
		<param name="DatePattern" value="'-'yyyy-MM-dd'.log'"></param>
	</appender>
	
	<!-- ▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶▶ Root Logger
		 Log4j의 공통 설정을 여기서 할 수 있다.
		 하지만, 각 Appender에서 값을 바꿔 설정한 것이 있다면, Appender가 우선되니 주의.
		 1) priority: 최소 출력 수준을 정의한다.
		    (TRACE > DEBUG > INFO > WARN > ERROR > FATAL)
			예를 들어 ERROR라고 정의하면 ERROR ~ FATAL까지만 출력된다.
		 2) appender-ref: 실행할 appender를 정의한다.
		    아까 console, file, daily 세 개의 appender를 셋팅해 놨지만,
		    다 실행되는 건 아니다. 그 중에서 여기에 적은 놈에 한해서만 실행된다.
		    즉, 내가 실행하고 싶지 않은 로거가 있을 경우, 아래와 같이 주석처리하면 된다.
	-->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
		<!-- <appender-ref ref="file" /> -->
		<!-- <appender-ref ref="daily" /> -->
	</root>
	
</log4j:configuration>
